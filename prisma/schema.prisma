// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  phone         String?
  height        Float?
  weight        Float?
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
  id             String        @id @default(cuid())
  user           User          @relation(fields: [userId], references: [id])
  userId         String
  status         String
  totalAmount    Float
  discountCode   String?
  discountAmount Float?
  customPants    CustomPants?
  upcyclePants   UpcyclePants?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model CustomPants {
  id           String   @id @default(cuid())
  order        Order    @relation(fields: [orderId], references: [id])
  orderId      String   @unique
  fabric       String
  volume       String
  cut          String
  button       String
  measurements Json
  price        Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model UpcyclePants {
  id             String   @id @default(cuid())
  order          Order    @relation(fields: [orderId], references: [id])
  orderId        String   @unique
  patchType      String
  patchId        String?
  customPatchUrl String?
  patchPosition  Json
  price          Float
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Patch {
  id        String   @id @default(cuid())
  name      String
  imageUrl  String
  price     Float
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DiscountCode {
  id          String   @id @default(cuid())
  code        String   @unique
  amount      Float
  type        String
  maxUses     Int
  currentUses Int      @default(0)
  validFrom   DateTime
  validUntil  DateTime
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
